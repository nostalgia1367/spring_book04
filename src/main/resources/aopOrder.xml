<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 공통 기능을 제공할 클래스를 빈으로 등록 -->
	<bean id="exeTimeAspect" class="aspect.ExeTimeAspect" />
	<bean id="cacheAspect" class="aspect.CacheAspect" />

	<!-- Aspect 설정: Advice를 어떤 Pointcut에 적용할 지 설정 -->
	<aop:config>
		<!-- 	하나의 AOP를 등록한다. -->
		<aop:aspect id="calculatorCache" ref="cacheAspect" order="1">
			<aop:pointcut id="calculatorMethod"
				expression="execution(public * chap07.Calculator.*(..))" />
			<aop:around pointcut-ref="calculatorMethod" method="execute" />
		</aop:aspect>
		<!-- 	또 하나의 AOP를 등록한다. -->
		<!--  order =0 이 먼저 실행되고 나중에 1이 실행된다.
			즉, measure 함수부터 실행하고 execute를 실행하게 될 것이다.
		 -->
		<aop:aspect id="measureAspect" ref="exeTimeAspect" order="0">
			<aop:pointcut id="publicMethod"
				expression="execution(public * chap07..*(..))" />
			<aop:around pointcut-ref="publicMethod" method="measure" />
		</aop:aspect>
	</aop:config>

	<bean id="impeCal" class="chap07.ImpeCalculator">
	</bean>

</beans>